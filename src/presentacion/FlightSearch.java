/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package presentacion;

import java.awt.Image;
import java.awt.Window;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingUtilities;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import logic.actualData;
import logic.createFlight;
import objects.Aerolinea;
import objects.Aeropuerto;
import objects.Vuelo;
import static presentacion.FlightCreator.rutaImagenExit;


/**
 *
 * @author Admin
 */
public class FlightSearch extends javax.swing.JDialog {
   private static DefaultTableModel model;
    public static String rutaImagenAvion = "src/resources/photos/avion2.jpg";
    public static String rutaImagenExit = "src/resources/photos/btnSalir.png";

    public FlightSearch(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        cargarImagen();
        loadExitImage();
        fillCombos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblBusquedaVuelos = new javax.swing.JLabel();
        lblDestino = new javax.swing.JLabel();
        lblOrigen = new javax.swing.JLabel();
        lblFechaSalida = new javax.swing.JLabel();
        jcbDestino = new javax.swing.JComboBox<>();
        jcbOrigen = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        datechooserFechaSalida = new datechooser.beans.DateChooserCombo();
        btnBuscar = new javax.swing.JButton();
        lblImagenExit = new javax.swing.JLabel();
        lblImagen = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblBusquedaVuelos.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblBusquedaVuelos.setText("BUSQUEDA DE VUELOS");
        jPanel1.add(lblBusquedaVuelos, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 10, 270, 20));

        lblDestino.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblDestino.setText("DESTINO");
        jPanel1.add(lblDestino, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 110, -1, -1));

        lblOrigen.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblOrigen.setText("ORIGEN");
        jPanel1.add(lblOrigen, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 110, -1, -1));

        lblFechaSalida.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblFechaSalida.setText("FECHA DE SALIDA");
        jPanel1.add(lblFechaSalida, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 110, -1, -1));

        jcbDestino.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jcbDestino.setForeground(new java.awt.Color(204, 204, 204));
        jcbDestino.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione un destino" }));
        jPanel1.add(jcbDestino, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 160, 160, 30));

        jcbOrigen.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jcbOrigen.setForeground(new java.awt.Color(204, 204, 204));
        jcbOrigen.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione un origen" }));
        jPanel1.add(jcbOrigen, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 160, 160, 30));

        model = new DefaultTableModel(new Object[][]{}, new String[]{
            "Aerolinea", "Aeropuerto salida", "Aeropuerto llegada",
            "Escala", "Hora salida", "Hora llegada", "Duracion", "Precios totales"
        }
    );

    // Llenar el modelo con datos de la lista de vuelos
    jTable1.setModel(model);
    ListSelectionModel selectionModel = jTable1.getSelectionModel();
    selectionModel.addListSelectionListener(new ListSelectionListener() {
        @Override
        public void valueChanged(ListSelectionEvent e) {
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");

            // Verificar si la selecci贸n es una fila
            if (!e.getValueIsAdjusting()) {
                int selectedRow = jTable1.getSelectedRow();
                if (selectedRow >= 0) {
                    // Obtener los datos de la fila seleccionada
                    String aerolinea = (String) jTable1.getValueAt(selectedRow, 0);
                    String aeropuertoSalida = (String) jTable1.getValueAt(selectedRow, 1);
                    String aeropuertoLlegada = (String) jTable1.getValueAt(selectedRow, 2);
                    String escala = (String) jTable1.getValueAt(selectedRow, 3);
                    String horaSalida = dateFormat.format(jTable1.getValueAt(selectedRow, 4));
                    String horaLlegada = dateFormat.format(jTable1.getValueAt(selectedRow, 5));
                    String duracion = String.valueOf(jTable1.getValueAt(selectedRow, 6));
                    String preciosTotales = String.valueOf(jTable1.getValueAt(selectedRow, 7));

                    // Realizar una acci贸n con los datos seleccionados
                    JOptionPane.showMessageDialog(null,
                        "Fila seleccionada:\n" +
                        "Aerolinea: " + aerolinea + "\n" +
                        "Aeropuerto salida: " + aeropuertoSalida + "\n" +
                        "Aeropuerto llegada: " + aeropuertoLlegada + "\n" +
                        "Escala: " + escala + "\n" +
                        "Hora salida: " + horaSalida + "\n" +
                        "Hora llegada: " + horaLlegada + "\n" +
                        "Duracion: " + duracion + "\n" +
                        "Precios totales: " + preciosTotales
                    );
                }
            }
        }
    });
    jScrollPane1.setViewportView(jTable1);

    jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 290, 980, 190));
    jPanel1.add(datechooserFechaSalida, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 160, 160, 30));

    btnBuscar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    btnBuscar.setText("BUSCAR");
    btnBuscar.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnBuscarActionPerformed(evt);
        }
    });
    jPanel1.add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 250, 90, 30));

    lblImagenExit.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            lblImagenExitMouseClicked(evt);
        }
    });
    jPanel1.add(lblImagenExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 40, 30));
    jPanel1.add(lblImagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 980, 480));

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblImagenExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImagenExitMouseClicked
        Window window = SwingUtilities.getWindowAncestor(lblImagenExit);
        window.dispose();
    }//GEN-LAST:event_lblImagenExitMouseClicked

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        filterFlights();
    }//GEN-LAST:event_btnBuscarActionPerformed

    /**
     * @param args the command line arguments
     */
    
    private void cargarImagen() {
        if (rutaImagenAvion != null && !rutaImagenAvion.isEmpty()) {
            File imagen = new File(rutaImagenAvion);
            if (imagen.exists()) {
                ImageIcon imageIcon = new ImageIcon(imagen.getAbsolutePath());
                Image image = imageIcon.getImage();
                Image newimg = image.getScaledInstance(lblImagen.getWidth(), lblImagen.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon newImageIcon = new ImageIcon(newimg);
                lblImagen.setIcon(newImageIcon);
            } else {
                lblImagen.setText("No se encontr贸 la imagen.");
            }
        } else {
            lblImagen.setText("No se proporcion贸 ninguna ruta de imagen.");
        }
    }
    private void loadExitImage() {
        if (rutaImagenExit != null && !rutaImagenExit.isEmpty()) {
            File imagen = new File(rutaImagenExit);
            if (imagen.exists()) {
                ImageIcon imageIcon = new ImageIcon(imagen.getAbsolutePath());
                Image image = imageIcon.getImage();
                Image newimg = image.getScaledInstance(lblImagenExit.getWidth(), lblImagenExit.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon newImageIcon = new ImageIcon(newimg);
                lblImagenExit.setIcon(newImageIcon);
            } else {
                lblImagenExit.setText("No se encontr贸 la imagen.");
            }
        } else {
            lblImagenExit.setText("No se proporcion贸 ninguna ruta de imagen.");
        }
    }
    
    private void fillCombos(){
        actualData dataActual = new actualData();
        for(Aeropuerto actualAirport : dataActual.getAirports()){
            jcbOrigen.addItem(actualAirport.getAirportName());
            jcbDestino.addItem(actualAirport.getAirportName());          
        }
    }
    
    private void filterFlights(){
        actualData dataActual = new actualData();
        List<Aeropuerto> actualAirports = dataActual.getAirports();
        List<Vuelo> actualFlights = dataActual.getFlights();
        List<Aerolinea> actualAirlines = dataActual.getAirlines();
        int id1 = 0;
        int id2 = 0;
        
        String departureAirport = String.valueOf(jcbOrigen.getSelectedItem());
        String arrivalAirport = String.valueOf(jcbDestino.getSelectedItem());
        List<Vuelo> filteredFlights = new ArrayList();
        for(Vuelo actualFlight:actualFlights){
            for(Aeropuerto actualArport: actualAirports){
                if(actualArport.getAirportName().equals(departureAirport)){
                    id1 = actualArport.getIdAirport();
                    
                }
                else if(actualArport.getAirportName().equals(arrivalAirport)){
                    id2 = actualArport.getIdAirport();
                    
                }
                    
            }
            if(actualFlight.getIdDepartureAirport() == id1 && actualFlight.getIdArrivalAirport() == id2){
                filteredFlights.add(actualFlight);//lista filtrada para los vuelos que cumplen los parametros
                System.out.println(datechooserFechaSalida.getSelectedDate());
            }
        }
        showFlights(filteredFlights, dataActual);
        
        
    }
    private void showFlights(List<Vuelo> filteredFlights, actualData dataActual){
        for (Vuelo actualFlight : filteredFlights) {
            String nombre = "";
            String aeropuerto1 = "";
            String aeropuerto2 = "";
            
            for(Aerolinea airline: dataActual.getAirlines()){
                if(actualFlight.getIdAirline() == airline.getIdAirline()){
                    nombre = airline.getAirlineName();
                }
            }
            for(Aeropuerto airport: dataActual.getAirports()){
                if(actualFlight.getIdDepartureAirport()== airport.getIdAirport()){
                    aeropuerto1 = airport.getAirportName();
                }
            }
            for(Aeropuerto airport: dataActual.getAirports()){
                if(actualFlight.getIdArrivalAirport()== airport.getIdAirport()){
                    aeropuerto2 = airport.getAirportName();
                }
            }
            model.addRow(new Object[]{
                nombre,
                aeropuerto1,
                aeropuerto2,
                "escalaImplementar",
                actualFlight.getDepartureHour(),
                actualFlight.getArrivalHour(),
                actualFlight.getFlightDuration(),
                actualFlight.getFlightPrice()
            });
        }
    }
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FlightSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FlightSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FlightSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FlightSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FlightSearch dialog = new FlightSearch(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private datechooser.beans.DateChooserCombo datechooserFechaSalida;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<String> jcbDestino;
    private javax.swing.JComboBox<String> jcbOrigen;
    private javax.swing.JLabel lblBusquedaVuelos;
    private javax.swing.JLabel lblDestino;
    private javax.swing.JLabel lblFechaSalida;
    private javax.swing.JLabel lblImagen;
    private javax.swing.JLabel lblImagenExit;
    private javax.swing.JLabel lblOrigen;
    // End of variables declaration//GEN-END:variables
}
